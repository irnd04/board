package com.board;

import java.net.URLDecoder;
import java.net.URLEncoder;
import java.sql.Connection;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.util.DBCPConn;
import com.util.MyUtil;

public class BoardAction extends DispatchAction {
	
	
	public ActionForward write(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		System.out.println("write()");
		
		return mapping.findForward("created");
	}
	
	public ActionForward write_ok(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		System.out.println("write_ok()");
		
		Connection conn = DBCPConn.getConnection();
		BoardDAO dao = new BoardDAO(conn);
		
		BoardForm f = (BoardForm) form;
		
		f.setNum(dao.getMaxNum() + 1);
		f.setIpAddr(request.getRemoteAddr());
		
		dao.insertData(f);
		
		return mapping.findForward("save");
		
		/*
		ActionForward af = new ActionForward();
		af.setRedirect(true);
		af.setPath("/board.do?method=list?pageNum" + pageNum);
		return af;
		*/ 
		// 파인드포워드안쓰고 저렇게 쓰면 내맘대로 갈수잇음
	}
	
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		System.out.println("list()");
		
		BoardDAO dao = new BoardDAO(DBCPConn.getConnection());
		
		String cp = request.getContextPath();
		
		MyUtil myUtil = new MyUtil();
		
		int numPerPage = 3;
		int totalPage = 0;
		int totalDataCount = 0;
		
		String pageNum = request.getParameter("pageNum");
		
		int currentPage = 1;
		
		if (pageNum != null) {
			currentPage = Integer.parseInt(pageNum);
		}
		
		String searchKey = request.getParameter("searchKey");
		String searchValue = request.getParameter("searchValue");
		
		if (searchKey == null) {
			searchKey = "subject";
			searchValue = "";
		}
		
		if (request.getMethod().equalsIgnoreCase("get")) {
			searchValue = URLDecoder.decode(searchValue, "utf-8");
		}
		
		totalDataCount = dao.getDataCount(searchKey, searchValue);
		
		if (totalDataCount != 0) {
			totalPage = myUtil.getPageCount(numPerPage, totalDataCount);
		}
		
		if (currentPage > totalPage) {
			currentPage = totalPage;
		}
		
		int start = (currentPage - 1) * numPerPage + 1;
		int end = currentPage * numPerPage;
		
		ArrayList<BoardForm> lists = dao.getLists(start, end, searchKey, searchValue);
		
		String param = "";
		String urlArticle = "";
		String urlList = "";
		
		
		if (!searchValue.equals("")) {
			searchValue = URLEncoder.encode(searchValue, "utf-8");
			param  = "&searchKey=" + searchKey;
			param += "&searchValue=" + searchValue;
		}
		
		urlList = cp + "/board.do?method=list" + param;
		urlArticle = cp + "/board.do?method=article&pageNum=" + currentPage + param;
		
		request.setAttribute("lists", lists);
		request.setAttribute("urlArticle", urlArticle);
		request.setAttribute("pageNum", pageNum);
		request.setAttribute("pageIndexList", myUtil.pageIndexList(currentPage, totalPage, urlList));
		request.setAttribute("totalPage", totalPage);
		request.setAttribute("totalDataCount", totalDataCount);
		
		
		return mapping.findForward("list");

	}
	
	public ActionForward article(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		System.out.println("article()");
		
		BoardDAO dao = new BoardDAO(DBCPConn.getConnection());
		BoardForm f = dao.getReadData(Integer.parseInt(request.getParameter("num")));

		request.setAttribute("form", f);
		
		return mapping.findForward("article");
	}
	
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		System.out.println("delete()");
		BoardDAO dao = new BoardDAO(DBCPConn.getConnection());
		dao.deleteData(Integer.parseInt(request.getParameter("num")));
		
		ActionForward af = new ActionForward();
		af.setRedirect(true);
		af.setPath("/board.do?method=list&pageNum=" + request.getParameter("pageNum"));
		return af;
	}
	
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		System.out.println("update()");
		BoardDAO dao = new BoardDAO(DBCPConn.getConnection());
		
		request.setAttribute("dto", dao.getReadData(Integer.parseInt(request.getParameter("num"))));
		
		return mapping.findForward("update");
	}
	
	public ActionForward update_ok(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		System.out.println("update_ok()");
		BoardDAO dao = new BoardDAO(DBCPConn.getConnection());
		
		dao.updateData((BoardForm) form);
		
		ActionForward af = new ActionForward();
		af.setRedirect(true);
		af.setPath("/board.do?method=list&pageNum=" + request.getParameter("pageNum"));
		return af;
		
		// 파인드포워드안쓰고 저렇게 쓰면 내맘대로 갈수잇음
	}
}
